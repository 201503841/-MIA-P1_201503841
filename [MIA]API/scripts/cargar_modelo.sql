CREATE TABLE Pais(
    id_pais INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    nombre VARCHAR(50) NOT NULL
);

CREATE TABLE Clasificacion(
    id_clasificacion SMALLINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    nombre VARCHAR(4) NOT NULL
);

CREATE TABLE Categoria(
    id_categoria INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    nombre VARCHAR(30) NOT NULL
);

CREATE TABLE Actor(
    id_actor INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    nombre VARCHAR(20) NOT NULL,
    apellido VARCHAR(20) NOT NULL
);

CREATE TABLE Idioma(
    id_idioma INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    nombre VARCHAR(60) NOT NULL
);

CREATE TABLE Ciudad(
    id_ciudad INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    nombre VARCHAR(60) NOT NULL,
    codigo_postal VARCHAR(5),
    pais_id_pais INTEGER REFERENCES Pais NOT NULL
);

CREATE TABLE Tienda(
    id_tienda INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    direccion VARCHAR(100) NOT NULL,
    nombre VARCHAR(20) NOT NULL,
    ciudad_id_ciudad INTEGER REFERENCES Ciudad NOT NULL
);

CREATE TABLE Empleado(
    id_empleado INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    nombre VARCHAR(20) NOT NULL,
    apellido VARCHAR(20) NOT NULL,
    direccion VARCHAR(100) NOT NULL,
    correo_electronico VARCHAR(65) NOT NULL,
    estado CHAR(1) NOT NULL,
    username VARCHAR(30) NOT NULL,
    contrasena VARCHAR(256) NOT NULL,
    es_encargado CHAR(1),
    ciudad_id_ciudad INTEGER REFERENCES Ciudad NOT NULL,
    tienda_id_tienda INTEGER REFERENCES Tienda NOT NULL
);

CREATE TABLE Cliente(
    id_cliente INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    nombre VARCHAR(20) NOT NULL,
    apellido VARCHAR(20) NOT NULL,
    direccion VARCHAR(100) NULL,
    correo_electronico VARCHAR(65) NOT NULL,
    fecha_registro DATE NOT NULL,
    estado CHAR(1) NOT NULL,
    ciudad_id_ciudad INTEGER REFERENCES Ciudad NOT NULL,
    tienda_favorita INTEGER REFERENCES Tienda NOT NULL
);

CREATE TABLE Pelicula(
    id_pelicula INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    titulo VARCHAR(60) NOT NULL,
    descripcion VARCHAR(200) NULL,
    ano_lanzamiento VARCHAR(4) NOT NULL,
    duracion SMALLINT NOT NULL,
    dias_renta SMALLINT NULL,
    costo_renta DECIMAL(4, 2) NOT NULL,
    costo_dano DECIMAL(4, 2) NOT NULL,
    clasificacion_id_clasificacion SMALLINT REFERENCES Clasificacion NOT NULL
);

CREATE TABLE Renta(
    id_renta INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    fecha_renta DATE NOT NULL,
    fecha_retorno DATE NULL,
    monto DECIMAL(6, 2) NULL,
    fecha_pago DATE NULL,
    cliente_id_cliente INTEGER REFERENCES Cliente NOT NULL,
    empleado_id_empleado INTEGER REFERENCES Empleado NOT NULL,
    pelicula_id_pelicula INTEGER REFERENCES Pelicula NOT NULL
);

CREATE TABLE Inventario(
    id_inventario INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    disponible CHAR(1) NOT NULL,
    cantidad SMALLINT NULL,
    tienda_id_tienda INTEGER REFERENCES Tienda NOT NULL,
    pelicula_id_pelicula INTEGER REFERENCES Pelicula NOT NULL
);

CREATE TABLE Categoria_Pelicula(
    id_categoria INTEGER REFERENCES Categoria,
    id_pelicula INTEGER REFERENCES Pelicula,
    PRIMARY KEY(id_categoria, id_pelicula)
);

CREATE TABLE Actor_Pelicula(
    id_actor INTEGER REFERENCES Actor,
    id_pelicula INTEGER REFERENCES Pelicula,
    PRIMARY KEY(id_actor, id_pelicula)
);

CREATE TABLE lenguaje_pelicula(
    id_idioma INTEGER REFERENCES Idioma,
    id_pelicula INTEGER REFERENCES Pelicula,
    es_original CHAR(1) NULL,
    PRIMARY KEY(id_idioma, id_pelicula)
);

-- Tabla Pais 
INSERT INTO
    PAIS (NOMBRE)
SELECT
    DISTINCT NOMBRE
FROM
    (
        SELECT
            DISTINCT PAIS_CLIENTE AS NOMBRE
        FROM
            TEMPORAL
        UNION
        SELECT
            DISTINCT PAIS_EMPLEADO AS NOMBRE
        FROM
            TEMPORAL
        UNION
        SELECT
            DISTINCT PAIS_TIENDA AS NOMBRE
        FROM
            TEMPORAL
    ) SUB
WHERE
    NOMBRE <> '';

-- Tabla clasificacion 
INSERT INTO
    CLASIFICACION (NOMBRE)
SELECT
    DISTINCT CLASIFICACION
FROM
    TEMPORAL
WHERE
    CLASIFICACION <> '';

-- tABLA CATEGORIA 
INSERT INTO
    CATEGORIA (NOMBRE)
SELECT
    DISTINCT CATEGORIA_PELICULA
FROM
    TEMPORAL
WHERE
    CATEGORIA_PELICULA <> '';

-- TABLA ACTOR 
INSERT INTO
    ACTOR (NOMBRE, APELLIDO)
SELECT
    DISTINCT (
        SELECT
            A [1]
        FROM
            REGEXP_SPLIT_TO_ARRAY(ACTOR_PELICULA, ' ') AS DT(A)
    ) AS NOMBRE,
    (
        SELECT
            A [2]
        FROM
            REGEXP_SPLIT_TO_ARRAY(ACTOR_PELICULA, ' ') AS DT(A)
    ) AS APELLIDO
FROM
    TEMPORAL
WHERE
    ACTOR_PELICULA <> '';

-- TABLA IDIOMA 
INSERT INTO
    IDIOMA (NOMBRE)
SELECT
    DISTINCT LENGUAJE_PELICULA
FROM
    TEMPORAL
WHERE
    LENGUAJE_PELICULA <> '';

-- TABLA CIUDAD 
INSERT INTO
    CIUDAD (NOMBRE, CODIGO_POSTAL, PAIS_ID_PAIS)
SELECT
    NOMBREC,
    CODIGO_POSTAL,
    ID_PAIS
FROM
    (
        SELECT
            DISTINCT CIUDAD_EMPLEADO AS NOMBREC,
            CODIGO_POSTAL_EMPLEADO AS CODIGO_POSTAL,
            ID_PAIS
        FROM
            TEMPORAL
            INNER JOIN PAIS ON PAIS_EMPLEADO = NOMBRE
        UNION
        SELECT
            DISTINCT CIUDAD_TIENDA AS NOMBREC,
            CODIGO_POSTAL_TIENDA AS CODIGO_POSTAL,
            ID_PAIS
        FROM
            TEMPORAL
            INNER JOIN PAIS ON PAIS_TIENDA = NOMBRE
        UNION
        SELECT
            DISTINCT CIUDAD_CLIENTE AS NOMBREC,
            CODIGO_POSTAL_CLIENTE AS CODIGO_POSTAL,
            ID_PAIS
        FROM
            TEMPORAL
            INNER JOIN PAIS ON PAIS_CLIENTE = NOMBRE
    ) SUB
WHERE
    NOMBREC <> '';

-- TABLA TIENDA 
INSERT INTO
    TIENDA (DIRECCION, NOMBRE, CIUDAD_ID_CIUDAD)
SELECT
    DISTINCT DIRECCION_TIENDA,
    NOMBRE_TIENDA,
    ID_CIUDAD
FROM
    TEMPORAL
    INNER JOIN CIUDAD ON CIUDAD_TIENDA = NOMBRE
WHERE
    NOMBRE_TIENDA <> ''
ORDER BY
    NOMBRE_TIENDA ASC;

-- TABLA EMPLEADO 
INSERT INTO
    EMPLEADO (
        NOMBRE,
        APELLIDO,
        DIRECCION,
        CORREO_ELECTRONICO,
        ESTADO,
        USERNAME,
        CONTRASENA,
        CIUDAD_ID_CIUDAD,
        TIENDA_ID_TIENDA,
        ES_ENCARGADO
    )
SELECT
    DISTINCT (
        SELECT
            A [1]
        FROM
            REGEXP_SPLIT_TO_ARRAY(NOMBRE_EMPLEADO, ' ') AS DT(A)
    ) AS NOMBRE,
    (
        SELECT
            A [2]
        FROM
            REGEXP_SPLIT_TO_ARRAY(NOMBRE_EMPLEADO, ' ') AS DT(A)
    ) AS APELLIDO,
    DIRECCION_EMPLEADO,
    CORREO_EMPLEADO,
    CASE
        EMPLEADO_ACTIVO
        WHEN 'Si' THEN 1
        ELSE 0
    END,
    USUARIO_EMPLEADO,
    CONTRASENA_EMPLEADO,
    ID_CIUDAD,
    ID_TIENDA,
    CASE
        NOMBRE_EMPLEADO
        WHEN NULL THEN 0
        ELSE 1
    END
FROM
    TEMPORAL
    INNER JOIN CIUDAD ON CIUDAD_EMPLEADO = CIUDAD.NOMBRE
    INNER JOIN TIENDA ON TIENDA_EMPLEADO = TIENDA.NOMBRE;

-- TABLA CLIENTE 
INSERT INTO
    CLIENTE (
        NOMBRE,
        APELLIDO,
        DIRECCION,
        CORREO_ELECTRONICO,
        FECHA_REGISTRO,
        ESTADO,
        CIUDAD_ID_CIUDAD,
        TIENDA_FAVORITA
    )
SELECT
    DISTINCT (
        SELECT
            A [1]
        FROM
            REGEXP_SPLIT_TO_ARRAY(NOMBRE_CLIENTE, ' ') AS DT(A)
    ) AS NOMBRE,
    (
        SELECT
            A [2]
        FROM
            REGEXP_SPLIT_TO_ARRAY(NOMBRE_CLIENTE, ' ') AS DT(A)
    ) AS APELLIDO,
    DIRECCION_CLIENTE,
    CORREO_CLIENTE,
    to_date(FECHA_CREACION, 'dd-mm-yyyy'),
    CASE
        CLIENTE_ACTIVO
        WHEN 'Si' THEN 1
        ELSE 0
    END,
    ID_CIUDAD,
    ID_TIENDA
FROM
    TEMPORAL
    INNER JOIN CIUDAD ON CIUDAD_CLIENTE = CIUDAD.NOMBRE
    AND CODIGO_POSTAL_CLIENTE = CIUDAD.CODIGO_POSTAL
    INNER JOIN TIENDA ON TIENDA_PREFERIDA = TIENDA.NOMBRE
    INNER JOIN PAIS ON PAIS.NOMBRE = PAIS_CLIENTE
    AND CIUDAD.PAIS_ID_PAIS = ID_PAIS
WHERE
    FECHA_CREACION <> ''
    AND NOMBRE_CLIENTE <> ''
ORDER BY
    NOMBRE ASC;

-- Tabla Pelicula 
INSERT INTO
    PELICULA (
        TITULO,
        DESCRIPCION,
        ANO_LANZAMIENTO,
        DURACION,
        DIAS_RENTA,
        COSTO_RENTA,
        COSTO_DANO,
        CLASIFICACION_ID_CLASIFICACION
    )
SELECT
    DISTINCT NOMBRE_PELICULA,
    DESCRIPCION_PELICULA,
    ANO_LANZAMIENTO,
    CASE
        DURACION
        WHEN 0 THEN NULL
        ELSE DURACION
    END,
    CASE
        DIAS_RENTA
        WHEN 0 THEN NULL
        ELSE DIAS_RENTA
    END,
    CASE
        COSTO_RENTA
        WHEN 0 THEN NULL
        ELSE COSTO_RENTA
    END,
    CASE
        COSTO_POR_DANO
        WHEN 0 THEN NULL
        ELSE COSTO_POR_DANO
    END,
    ID_CLASIFICACION
FROM
    TEMPORAL
    INNER JOIN CLASIFICACION ON CLASIFICACION = NOMBRE
WHERE
    NOMBRE_PELICULA <> '';

-- Tabla Renta 
INSERT INTO
    RENTA (
        FECHA_RENTA,
        FECHA_RETORNO,
        MONTO,
        FECHA_PAGO,
        CLIENTE_ID_CLIENTE,
        EMPLEADO_ID_EMPLEADO,
        PELICULA_ID_PELICULA
    )
SELECT
    DISTINCT to_date(FECHA_RENTA, 'dd-mm-yyyy'),
    to_date(FECHA_RETORNO, 'dd-mm-yyyy'),
    CASE
        MONTO_A_PAGAR
        WHEN 0 THEN NULL
        ELSE MONTO_A_PAGAR
    END,
    to_date(FECHA_PAGO, 'dd-mm-yyyy'),
    ID_CLIENTE,
    ID_EMPLEADO,
    ID_PELICULA
FROM
    TEMPORAL
    INNER JOIN CLIENTE ON NOMBRE_CLIENTE = CLIENTE.NOMBRE || ' ' || CLIENTE.APELLIDO
    INNER JOIN EMPLEADO ON NOMBRE_EMPLEADO = EMPLEADO.NOMBRE || ' ' || EMPLEADO.APELLIDO
    INNER JOIN PELICULA ON NOMBRE_PELICULA = TITULO
WHERE
    FECHA_RENTA <> '';

-- TABLA INVENTRIO 
INSERT INTO
    INVENTARIO (
        DISPONIBLE,
        TIENDA_ID_TIENDA,
        PELICULA_ID_PELICULA,
        CANTIDAD
    )
SELECT
    DISTINCT 1,
    ID_TIENDA,
    ID_PELICULA,
    COUNT(*)
FROM
    TEMPORAL
    INNER JOIN TIENDA ON TIENDA_PELICULA = TIENDA.NOMBRE
    INNER JOIN PELICULA ON NOMBRE_PELICULA = TITULO
GROUP BY
    ID_TIENDA,
    ID_PELICULA;

-- TABLA CATEGORIA-PELICULA 
INSERT INTO
    CATEGORIA_PELICULA (ID_CATEGORIA, ID_PELICULA)
SELECT
    DISTINCT ID_CATEGORIA,
    ID_PELICULA
FROM
    TEMPORAL
    INNER JOIN CATEGORIA ON CATEGORIA_PELICULA = CATEGORIA.NOMBRE
    INNER JOIN PELICULA ON NOMBRE_PELICULA = PELICULA.TITULO;

-- TABLA ACTOR PELICULA 
INSERT INTO
    ACTOR_PELICULA (ID_ACTOR, ID_PELICULA)
SELECT
    DISTINCT ID_ACTOR,
    ID_PELICULA
FROM
    TEMPORAL
    INNER JOIN ACTOR ON ACTOR_PELICULA = ACTOR.NOMBRE || ' ' || ACTOR.APELLIDO
    INNER JOIN PELICULA ON NOMBRE_PELICULA = TITULO;

-- TABLA LENGUAJE_PELICULA
INSERT INTO
    LENGUAJE_PELICULA (ID_IDIOMA, ID_PELICULA, ES_ORIGINAL)
SELECT
    DISTINCT ID_IDIOMA,
    ID_PELICULA,
    CASE
        NOMBRE_PELICULA
        WHEN NULL THEN 0
        ELSE 1
    END
FROM
    TEMPORAL
    INNER JOIN IDIOMA ON LENGUAJE_PELICULA = IDIOMA.NOMBRE
    INNER JOIN PELICULA ON NOMBRE_PELICULA = TITULO;